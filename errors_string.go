// Code generated by "stringer -type=Errors -output=errors_string.go"; DO NOT EDIT.

package dgx

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AuthErrNotFound-1000]
	_ = x[AuthErrRequiredID-1001]
	_ = x[AuthErrRequiredFields-1002]
	_ = x[AuthErrNoAccess-1003]
	_ = x[AuthErrForbidden-1004]
	_ = x[AuthErrLogin-1005]
	_ = x[AuthErrRefreshToken-1006]
	_ = x[CatalogErrNotFound-2200]
	_ = x[CatalogErrRequiredID-2201]
	_ = x[CatalogErrIndexing-2202]
	_ = x[ImageErrNotFound-3000]
	_ = x[ImageErrUpload-3001]
	_ = x[ImageErrThumbnail-3002]
	_ = x[ItemErrNotFound-2000]
	_ = x[ItemErrRequiredID-2001]
	_ = x[ItemErrRequiredFields-2002]
	_ = x[ItemErrCreateItemExists-2003]
	_ = x[ItemErrImport-2004]
	_ = x[MarketErrNotFound-2100]
	_ = x[MarketErrRequiredID-2101]
	_ = x[MarketErrRequiredFields-2102]
	_ = x[MarketErrInvalidStatus-2103]
	_ = x[MarketErrNotesLimit-2104]
	_ = x[MarketErrInvalidPrice-2105]
	_ = x[MarketErrQtyLimitPerUser-2106]
	_ = x[MarketErrRequiredPartnerURL-2107]
	_ = x[MarketErrInvalidBidPrice-2108]
	_ = x[MarketErrInvalidAskPrice-2109]
	_ = x[ReportErrNotFound-5000]
	_ = x[ReportErrRequiredID-5001]
	_ = x[ReportErrRequiredFields-5002]
	_ = x[StorageUncaughtErr-100]
	_ = x[StorageMergeErr-101]
	_ = x[TrackErrNotFound-4000]
	_ = x[UserErrNotFound-1100]
	_ = x[UserErrRequiredID-1101]
	_ = x[UserErrRequiredFields-1102]
	_ = x[UserErrProfileImageDL-1103]
	_ = x[UserErrSteamSync-1104]
	_ = x[UserErrSuspended-1105]
	_ = x[UserErrBanned-1106]
	_ = x[DeliveryErrNotFound-6000]
	_ = x[DeliveryErrRequiredID-6001]
	_ = x[DeliveryErrRequiredFields-6002]
	_ = x[InventoryErrNotFound-6100]
	_ = x[InventoryErrRequiredID-6101]
	_ = x[InventoryErrRequiredFields-6102]
}

const _Errors_name = "StorageUncaughtErrStorageMergeErrAuthErrNotFoundAuthErrRequiredIDAuthErrRequiredFieldsAuthErrNoAccessAuthErrForbiddenAuthErrLoginAuthErrRefreshTokenUserErrNotFoundUserErrRequiredIDUserErrRequiredFieldsUserErrProfileImageDLUserErrSteamSyncUserErrSuspendedUserErrBannedItemErrNotFoundItemErrRequiredIDItemErrRequiredFieldsItemErrCreateItemExistsItemErrImportMarketErrNotFoundMarketErrRequiredIDMarketErrRequiredFieldsMarketErrInvalidStatusMarketErrNotesLimitMarketErrInvalidPriceMarketErrQtyLimitPerUserMarketErrRequiredPartnerURLMarketErrInvalidBidPriceMarketErrInvalidAskPriceCatalogErrNotFoundCatalogErrRequiredIDCatalogErrIndexingImageErrNotFoundImageErrUploadImageErrThumbnailTrackErrNotFoundReportErrNotFoundReportErrRequiredIDReportErrRequiredFieldsDeliveryErrNotFoundDeliveryErrRequiredIDDeliveryErrRequiredFieldsInventoryErrNotFoundInventoryErrRequiredIDInventoryErrRequiredFields"

var _Errors_map = map[Errors]string{
	100:  _Errors_name[0:18],
	101:  _Errors_name[18:33],
	1000: _Errors_name[33:48],
	1001: _Errors_name[48:65],
	1002: _Errors_name[65:86],
	1003: _Errors_name[86:101],
	1004: _Errors_name[101:117],
	1005: _Errors_name[117:129],
	1006: _Errors_name[129:148],
	1100: _Errors_name[148:163],
	1101: _Errors_name[163:180],
	1102: _Errors_name[180:201],
	1103: _Errors_name[201:222],
	1104: _Errors_name[222:238],
	1105: _Errors_name[238:254],
	1106: _Errors_name[254:267],
	2000: _Errors_name[267:282],
	2001: _Errors_name[282:299],
	2002: _Errors_name[299:320],
	2003: _Errors_name[320:343],
	2004: _Errors_name[343:356],
	2100: _Errors_name[356:373],
	2101: _Errors_name[373:392],
	2102: _Errors_name[392:415],
	2103: _Errors_name[415:437],
	2104: _Errors_name[437:456],
	2105: _Errors_name[456:477],
	2106: _Errors_name[477:501],
	2107: _Errors_name[501:528],
	2108: _Errors_name[528:552],
	2109: _Errors_name[552:576],
	2200: _Errors_name[576:594],
	2201: _Errors_name[594:614],
	2202: _Errors_name[614:632],
	3000: _Errors_name[632:648],
	3001: _Errors_name[648:662],
	3002: _Errors_name[662:679],
	4000: _Errors_name[679:695],
	5000: _Errors_name[695:712],
	5001: _Errors_name[712:731],
	5002: _Errors_name[731:754],
	6000: _Errors_name[754:773],
	6001: _Errors_name[773:794],
	6002: _Errors_name[794:819],
	6100: _Errors_name[819:839],
	6101: _Errors_name[839:861],
	6102: _Errors_name[861:887],
}

func (i Errors) String() string {
	if str, ok := _Errors_map[i]; ok {
		return str
	}
	return "Errors(" + strconv.FormatInt(int64(i), 10) + ")"
}
